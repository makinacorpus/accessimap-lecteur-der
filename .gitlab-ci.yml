# This file is a template, and might need editing before it works on your project.
# Official framework image. Look for the different tagged releases at:
# https://hub.docker.com/r/library/node/tags/
image: node:8

# This folder is cached between builds
# http://docs.gitlab.com/ce/ci/yaml/README.html#cache
cache:
  paths:
  - modules/der-reader/node_modules/
  - electron/node_modules/

stages:
  - build
  - deploy

build_web:
  stage: build
  script:
   - cd modules/der-reader
   - npm install
   - npm run build

build_electron:
  stage: build
  before_script:
   - dpkg --add-architecture i386
   - add-apt-repository ppa:ubuntu-wine/ppa -y
   - apt-get update
   - apt-get install --no-install-recommends -y wine1.8
   - apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 3FA7E0328081BFF6A14DA29AA6A19B38D3D831EF
   - echo "deb http://download.mono-project.com/repo/debian wheezy main" | tee /etc/apt/sources.list.d/mono-xamarin.list
   - apt-get update
   - apt-get install --no-install-recommends -y mono-devel ca-certificates-mono
  script:
   - cd modules/der-reader
   - npm install
   - npm run build
   - cd ../../electron
   - npm install
   - npm run build
  artifacts:
    expire_in: 1 week
    paths:
    - electron/dist/

deploy_testing:
  stage: deploy
  script:
    - npm install
    - npm run build
    - npm run deploy-testing
  environment:
    name: testing
    url: http://accessimap-lecteur-der-testing.surge.sh

deploy_staging:
  stage: deploy
  script:
    - npm install
    - npm run build
    - npm run deploy-staging
  environment:
    name: staging
    url: http://accessimap-lecteur-der-staging.surge.sh
  artifacts:
    expire_in: 1 week
    paths:
    - dist/
  when: manual
  only:
  - master
